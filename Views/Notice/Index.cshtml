@model FollowPeers.Models.UserProfile
@using FollowPeers.Models;
@Html.Partial("_PubHeader")
@{
    ViewBag.Title = Model.FirstName+" "+Model.LastName+"'s Notice Board";
    FollowPeers.Models.FollowPeersDBEntities followPeersDB = new FollowPeers.Models.FollowPeersDBEntities();
    string name = Membership.GetUser().UserName;
    FollowPeers.Models.UserProfile myprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserName == name);
    if (Model.UserProfileId == myprofile.UserProfileId)
    {
    @Html.Partial("_SideBar1", new ViewDataDictionary { { "Name", myprofile.FirstName + " " + myprofile.LastName } })
    }
    else
    {
    @Html.Partial("_SideBar1", new ViewDataDictionary { { "PhotoUrl", @Model.PhotoUrl }, { "ProfileName", @Model.UserProfileId }, { "Name", @Model.FirstName + " " + Model.LastName } })
 
    }
}
<div class="grid_10">
    <div class="box" style="overflow: auto; min-height: 200px; height: auto;">
        <script type="text/javascript" language="javascript">
            function puthint(divname, hinttext) {
                $(document).ready(function () {

                    // Define what happens when the textbox comes under focus
                    // Remove the watermark class and clear the box
                    $(divname).focus(function () {

                        $(this).filter(function () {

                            // We only want this to apply if there's not 
                            // something actually entered
                            return $(this).val() == "" || $(this).val() == hinttext

                        }).removeClass("watermarkOn").val("");

                    });

                    // Define what happens when the textbox loses focus
                    // Add the watermark class and default text
                    $(divname).filter(function () {

                        // We only want this to apply if there's not
                        // something actually entered
                        return $(this).val() == ""

                    }).addClass("watermarkOn").val(hinttext);

                    $(divname).blur(function () {

                        $(this).filter(function () {

                            // We only want this to apply if there's not
                            // something actually entered
                            return $(this).val() == ""

                        }).addClass("watermarkOn").val(hinttext);

                    });

                });
            }
            puthint("#message", "Update your status message...");
            puthint("#posttonotice", "Write something on the @Model.FirstName @Model.LastName's Noticeboard...");
        
        </script>
        <h2>@Model.FirstName @Model.LastName's Notice Board</h2>
        <div style="background: #BBB; padding: 7px; margin: 5px 0px; font-weight: bold;">
            @if (Model.StatusMessage != null)
            {
                @Model.StatusMessage
            }
            else
            {
                <text>No status message has been posted yet.</text>
            }
        </div>
        @{
            int count = 0;
            if (myprofile.UserProfileId == Model.UserProfileId)
            {
                    
            <form action="/Profile/UpdateStatus" method="post">
            <textarea rows="2" cols="120" id="message" name="message" type="text" value="" style="width: 100%;"></textarea>
            <input type="submit" title="Update your status message" style="cursor: pointer; float: right;
                padding: 2px 5px;" value="Update">
            </form>
            
            }
            else
            {
               
                bool allowPostonWall = false;

                string membername = Membership.GetUser().UserName;

                IQueryable<int> custQuery = from cust in followPeersDB.Relationships where cust.personAName == membername && cust.personBName == Model.UserName select cust.tier;
                if (custQuery.Count() != 0)
                {
                    foreach (int tier in custQuery)
                    {
                        FollowPeers.Models.Tier temp = Model.Tiers.SingleOrDefault(p => p.Level == tier);
                        if (temp.Noticeboard == 1) { allowPostonWall = true; }

                    }
                }
                //else (meaning public view.. so check tier 1)
                else
                {
                    FollowPeers.Models.Tier temp = Model.Tiers.SingleOrDefault(p => p.Level == 1);
                    if (temp.Noticeboard == 1) { allowPostonWall = true; }

                }
                if (allowPostonWall == true)
                {
            <form action="/Profile/PosttoNoticeBoard" method="post">
            <textarea rows="2" cols="120" id="posttonotice" name="message" type="text" value=""
                style="width: 100%;"></textarea>
            <input type="hidden" name="redirect" value="@Model.UserProfileId" />
            <input type="submit" title="Write something on @Model.FirstName's Notice Board..." style="cursor: pointer; float: right;
                            padding: 2px 5px;" value="Post">
            </form>
                }
            }
        }
        
           
            @if (Model.Updates != null)
            {
                var newList = Model.Updates.OrderByDescending(x => x.Time).ToList();

                foreach (var currentUpdate in newList)
                {
                    //need to display only own's updates
                    if (currentUpdate.Own == true) 
                    {
                        
                        UserProfile userprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == currentUpdate.owner);
                        <div style="border-bottom: 1px solid grey; margin: 10px 0px;">
                            <div style="float: left; height: 50px; overflow: hidden;"><img src="@Html.Encode(userprofile.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:50px;"/></div>
                            <div style="margin-left: 8px; float: left; width: 88%;">
                            <a href="/Profile/Index/@userprofile.UserProfileId"><b>@userprofile.FirstName @userprofile.LastName</b></a><br />
                        @if (currentUpdate.type == 3)
                         {
                       //  <text>@currentUpdate.message @currentUpdate.UpdateId @Model.UserProfileId </text>
                           NoticeComment tempcomment = followPeersDB.NoticeComments.SingleOrDefault(p => p.commenterId == Model.UserProfileId && p.message==currentUpdate.message);
                          <text>@tempcomment.message</text>
                              Update tempupdate = followPeersDB.Updates.SingleOrDefault(p => p.UpdateId == tempcomment.update.UpdateId);
                             // UserProfile tempprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == tempupdate.owner);
                              UserProfile tempprofile = tempupdate.UserProfiles.ElementAt(0);
                              <text>Commented: </text>@currentUpdate.message <text>on</text> <a style='cursor:pointer;' href='/Profile/Index/@tempprofile.UserProfileId'>@tempprofile.FirstName</a><text>'s
                              <a style='cursor:pointer;' href='/Notice/Index/@tempprofile.UserProfileId'>Notice Board</a></text>
                         }
                         else if(currentUpdate.type == 4)
                         {
                             Update tempupdate = followPeersDB.Updates.SingleOrDefault(p => p.message == currentUpdate.message && p.type==5);
                             int tempuserprofileID = tempupdate.UserProfiles.ElementAt(0).UserProfileId;
                             UserProfile tempprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == tempuserprofileID);
                              
                             <text>Wrote: </text>@currentUpdate.message <text>on</text> <a style='cursor:pointer;' href='/Profile/Index/@tempprofile.UserProfileId'>@tempprofile.FirstName</a><text>'s
                              <a style='cursor:pointer;' href='/Notice/Index/@tempprofile.UserProfileId'>Notice Board</a></text>
                         }
                        else
                        {@currentUpdate.message}
                        <br />
                   
                        @{
                        string id1 = "comment1" + @count;
                        string time = "";
                        TimeSpan temp = DateTime.Now - currentUpdate.Time;
                        if (temp.Days > 1) { time += temp.Days.ToString() + " days ago"; }
                        else if (temp.Hours > 1) { time += temp.Hours.ToString() + " hrs ago"; }
                        else { time += temp.Minutes.ToString() + " mins ago"; }
                         }
                            <text style="color: #777">@time </text>

                        @{                      
                        //if it is a comment on other people's wall, dont allow commenting
                        if (currentUpdate.type != 3 && currentUpdate.type!=4)
                        {
                               <div style="background: #CCC; padding: 5px 3px; margin-bottom: 3px;">
                               @{var commentslist = followPeersDB.NoticeComments.OrderBy(x=>x.time);
                                 }
                              @{foreach (NoticeComment cmt in commentslist)
                                {
                                    if (cmt.update.UpdateId == currentUpdate.UpdateId)
                                    {   <div style="border-bottom: 1px solid #ddd;">
                                      @{
                                        IQueryable<UserProfile> custQuery2 = from cust in followPeersDB.UserProfiles where cust.UserProfileId == cmt.commenterId select cust;
                                        foreach (UserProfile user in custQuery2)
                                        {
                                              <div style="float: left; margin: 3px; height: 30px; overflow: hidden;">
                                                  <img src="@Html.Encode(user.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:30px;"/></div>
                                              <div style="margin-left: 8px; float: left;">
                                                  <a href="/Profile/Index/@user.UserProfileId"><b>@user.FirstName @user.LastName</b></a><text> @cmt.message </text></div>
                                      
                                            if (user.UserProfileId == myprofile.UserProfileId)
                                            {<div id="mydiv" style="float: right; margin-right: 5px; color: #888; font-size: 15px;
                                                             cursor: pointer;">@Html.ActionLink("x", "DeleteComment", "Notice", new { id = cmt.NoticeCommentId, redirect = Model.UserProfileId }, null)</div>}
                                              <div style="clear: both;">
                                              </div>
                                        }
                                      }
                                    </div>
                                    } //end of if
                                }
                              }
                              <form action="/Profile/AddComment" method="post">
                              <input type="hidden" name="commentid" value="@currentUpdate.UpdateId" />
                              <input type="hidden" name="redirect" value="@Model.UserProfileId" />
                              @{string id = "comment" + @count;}
                              <input id="@id" type="text" name="message" value="" style="width:98%;" /></form>
                              <script type="text/javascript" language="javascript">                                  puthint("#@id", "Write a comment...");</script>
                              @{count++;}
                          </div>}
                      }
                </div>
                <div style="clear: both;">
                </div>
            </div>
                    }


                }
            }    
        
    </div>
</div>
<div class="grid_3">
    <div class="box">
        <h2>
            @Model.FirstName @Model.LastName follows</h2>
        @{Html.RenderAction("Following", "Profile", Model.UserProfileId);}
    </div>
</div>
<div class="grid_3">
    <div class="box">
        <h2>
            @Model.FirstName @Model.LastName's followers</h2>
        @{Html.RenderAction("FollowedBy", "Profile", Model.UserProfileId);}
    </div>
</div>
@Html.Partial("_Footer")
